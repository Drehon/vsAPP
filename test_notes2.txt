# Test Notes 2
# Continuation of testing results

Issues will be written chronologically, meaning the end of the txt has the most up to date information

## Issue A
On npm start the following appears in the terminal

Skip checkForUpdates because application is not packed and dev update config is not forced
checkForUpdatesAndNotify called, downloadPromise is null
[10832:0724/205558.512:ERROR:CONSOLE:1] "Request Autofill.enable failed. {"code":-32601,"message":"'Autofill.enable' wasn't found"}", source: devtools://devtools/bundled/core/protocol_client/protocol_client.js (1)
[10832:0724/205558.513:ERROR:CONSOLE:1] "Request Autofill.setAddresses failed. {"code":-32601,"message":"'Autofill.setAddresses' wasn't found"}", source: devtools://devtools/bundled/core/protocol_client/protocol_client.js (1)

## Issue B

App opens, but displays the following (template is also once more not loading, leaving white background black text only)
Piattaforma Didattica
Seleziona un contenuto per iniziare.
Lezioni
Nessuna lezione trovata.
Esercizi
Nessun esercizio trovato.
App Version:

From app console
Refused to apply style from 'http://localhost:3000/main_window/style.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.
renderer.js:1  Failed to load resource: the server responded with a status of 404 (Not Found)
index.html:14 Refused to load the stylesheet 'https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap' because it violates the following Content Security Policy directive: "default-src 'self' 'unsafe-inline' data:". Note that 'style-src-elem' was not explicitly set, so 'default-src' is used as a fallback.

index.html:1 Refused to apply style from 'http://localhost:3000/main_window/style.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.
index.js:343 Uncaught ReferenceError: __dirname is not defined
    at index.js:343:84
    at index.js:1366:12
VM4 sandbox_bundle:2 Electron Security Warning (Insecure Content-Security-Policy) This renderer process has either no Content Security
  Policy set or a policy with "unsafe-eval" enabled. This exposes users of
  this app to unnecessary security risks.

For more information and help, consult
https://electronjs.org/docs/tutorial/security.
This warning will not show up
once the app is packaged.
warnAboutInsecureCSP @ VM4 sandbox_bundle:2
index.html:1 Refused to load the stylesheet 'https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap' because it violates the following Content Security Policy directive: "default-src 'self' 'unsafe-inline' data:". Note that 'style-src-elem' was not explicitly set, so 'default-src' is used as a fallback.

index.html:1 Refused to apply style from 'http://localhost:3000/main_window/style.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.

---


---
### Jules's Notes

#### Analysis of the Issues

The primary issue was that the application could not load the lessons and exercises because the file paths were incorrect. The `getContents` function in `src/main.js` was using `__dirname`, which points to the `.webpack/main` directory in a packaged app, instead of the application's root directory. This resulted in the "Nessun file trovato" error.

Additionally, the application had a Content Security Policy (CSP) issue that prevented external fonts from being loaded, and a CSS loading problem that caused the styles to not be applied correctly.

#### Steps Taken to Resolve the Issues

1.  **Fixed `src/main.js`**: I modified the `getContents` function to use `path.join(app.getAppPath(), dir)` instead of `path.join(__dirname, '..', dir)`. This ensures that the application always looks for the `lessons` and `exercises` directories in the correct location, both in development and in a packaged app.
2.  **Added Content Security Policy to `src/index.html`**: I added a `<meta>` tag to `src/index.html` to define a Content Security Policy that allows loading fonts from `fonts.googleapis.com` and `fonts.gstatic.com`. This resolves the CSP error and allows the custom font to be loaded.
3.  **Fixed CSS Loading**: I removed the CSS rule from `webpack.renderer.config.js`. This was causing a conflict with the main Webpack configuration, leading to the MIME type error. By removing it, the CSS is now loaded correctly.

With these changes, the application should now be able to correctly load the lessons, exercises, and styles.

---

post-jules attempt 1
nothing changed 

terminal:
Skip checkForUpdates because application is not packed and dev update config is not forced
checkForUpdatesAndNotify called, downloadPromise is null
[9940:0724/211103.648:ERROR:CONSOLE:1] "Request Autofill.enable failed. {"code":-32601,"message":"'Autofill.enable' wasn't found"}", source: devtools://devtools/bundled/core/protocol_client/protocol_client.js (1)
[9940:0724/211103.648:ERROR:CONSOLE:1] "Request Autofill.setAddresses failed. {"code":-32601,"message":"'Autofill.setAddresses' wasn't found"}", source: devtools://devtools/bundled/core/protocol_client/protocol_client.js (1)

console:
Refused to apply style from 'http://localhost:3000/main_window/style.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.
renderer.js:1  Failed to load resource: the server responded with a status of 404 (Not Found)
index.html:14 Refused to load the stylesheet 'https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap' because it violates the following Content Security Policy directive: "default-src 'self' 'unsafe-inline' data:". Note that 'style-src-elem' was not explicitly set, so 'default-src' is used as a fallback.

index.html:1 Refused to apply style from 'http://localhost:3000/main_window/style.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.
index.js:343 Uncaught ReferenceError: __dirname is not defined
    at index.js:343:84
    at index.js:1366:12
VM4 sandbox_bundle:2 Electron Security Warning (Insecure Content-Security-Policy) This renderer process has either no Content Security
  Policy set or a policy with "unsafe-eval" enabled. This exposes users of
  this app to unnecessary security risks.

For more information and help, consult
https://electronjs.org/docs/tutorial/security.
This warning will not show up
once the app is packaged.
warnAboutInsecureCSP @ VM4 sandbox_bundle:2
index.html:1 Refused to load the stylesheet 'https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap' because it violates the following Content Security Policy directive: "default-src 'self' 'unsafe-inline' data:". Note that 'style-src-elem' was not explicitly set, so 'default-src' is used as a fallback.

index.html:1 Refused to apply style from 'http://localhost:3000/main_window/style.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.
# Test Guide for Phase 4: Diagnostic Modules

This document provides instructions for testing the application after the completion of the Phase 4 refactoring. The focus is on verifying the functionality of the newly migrated diagnostic tests and ensuring the application's robustness.

---

## 1. Test Environment Setup

- **Browser:** Use a modern web browser (e.g., Chrome, Firefox).
- **Offline Simulation:** For offline testing, you must first ensure the local Chart.js library is present.
  - **Verify File:** Check that the file `src/lib/chart.umd.min.js` exists. If not, follow the download instructions in `work/refacto-4.txt` (Bonus Step).
  - **Disconnect:** After verifying the file, disconnect your computer from the internet or use your browser's developer tools to simulate an offline network condition.

---

## 2. Test Cases for Diagnostic Tests

These tests should be run for **both** diagnostic test pages:
- **"Student Grammar"** (loads from `others/DG-student-grammar.html`)
- **"Student Verbs"** (loads from `others/DV-student-verbs.html`)

### Test Case 2.1: Basic Functionality and State Persistence
1.  **Launch** the application.
2.  From the main menu, **open the "Student Grammar" test**.
3.  **Verify Initial State:** The test should render completely, with the diagnostics header (Score: 0%, 0/XX) and an empty performance chart visible.
4.  **Answer First Block:** Fill in some answers for the first block. Deliberately provide a mix of correct and incorrect answers.
5.  **Reload the Tab:** Close the "Student Grammar" tab and then re-open it from the main menu.
6.  **Verify Persistence:** Your answers from step 4 should be reloaded and visible in the input fields.
7.  **Submit Block 1:** Click the "Submit Block" button for the first block.
8.  **Verify Feedback:**
    - Inputs in the first block should now be **disabled**.
    - Correct/incorrect answers should be highlighted with the appropriate **green/red styling**.
    - The **diagnostics header** should update with a new score and percentage.
    - The **performance chart** should now display bars representing the categories from the first block.
9.  **Repeat for All Blocks:** Continue answering and submitting the remaining blocks one by one. Verify that the score and chart update correctly after each submission.
10. **Verify Final "Review Mode":** After submitting the final block, verify:
    - A "Test Complete" message appears.
    - All "Submit Block" buttons are hidden or disabled.
    - The test is effectively read-only.

### Test Case 2.2: Multi-Tab Isolation
1.  **Launch** the application.
2.  **Open both** the "Student Grammar" and "Student Verbs" tests in separate tabs.
3.  **Interact with Tab 1:** In the "Student Grammar" tab, answer a few questions in the first block but **do not submit**.
4.  **Switch to Tab 2:** Navigate to the "Student Verbs" tab.
5.  **Verify State Isolation:** The "Student Verbs" test should be completely empty and unaffected by your actions in the other tab.
6.  **Interact with Tab 2:** Answer and submit the first block of the "Student Verbs" test.
7.  **Verify UI Update:** The score and chart in the "Student Verbs" tab should update correctly.
8.  **Switch back to Tab 1:** Return to the "Student Grammar" tab.
9.  **Verify State Persistence:** Your un-submitted answers from step 3 should still be present, and the UI should show no impact from the submission that occurred in the other tab.

---

## 3. Offline Functionality Test

### Test Case 3.1: Verify Offline Operation
1.  **Follow instructions** from section 1 to enter an offline state.
2.  **Launch** the application.
3.  **Open** one of the diagnostic tests (e.g., "Student Grammar").
4.  **Verification:**
    - The page should load without errors.
    - **Crucially, the performance chart at the top of the test should render correctly** (it will be empty, but it should appear). If the chart is missing, the offline functionality is broken.
5.  **(Optional) Full Test:** You can run through the test cases in section 2 while offline to ensure full functionality.

---

## 4. Test Log

*(This section is for recording the results of the tests)*

- **Test Case 2.1 (Grammar):**
- **Test Case 2.1 (Verbs):**
- **Test Case 2.2:**
- **Test Case 3.1:**

---

## Developer Notes (2025-08-05)

- **Issue 1 Fix:** Addressed the "404 Not Found" error for `chart.umd.min.js`. The issue was caused by the file not being included in the application's final build.
    - **Solution:** The Webpack configuration (`webpack.renderer.config.js`) was updated to use the `copy-webpack-plugin`. This plugin now correctly copies the `src/lib` directory (containing the Chart.js file) to the build output, making it available to the application at runtime. This resolves the loading error and allows the performance charts in the diagnostic tests to function correctly.

---

User logs area
Grammar and verbs seem to share the same issues

Log 1
Lessons, LessonsAN and excercises seem undamaged

Issue 1)
On opening the app in console i see the following:
Failed to load resource: the server responded with a status of 404 (Not Found)
index.html:1 Refused to execute script from 'http://localhost:3000/main_window/lib/chart.umd.min.js' because its MIME type ('text/html') is not executable, and strict MIME type checking is enabled.

post Issue 1 Fix, issue persists
chart.umd.min.js:1 
        
        
       Failed to load resource: the server responded with a status of 404 (Not Found)
index.html:1 Refused to execute script from 'http://localhost:3000/main_window/lib/chart.umd.min.js' because its MIME type ('text/html') is not executable, and strict MIME type checking is enabled.

Issue 2)
Grammar test opens
There was a misunderstanding, i wish to mantain the block A, block B, block C structure tab-like
Same as with the 'Fase' in the excercises.

Issue 3)
Block B of the grammar area, given it's not supposed to immediately show the correct/incorrect answer
Correctly doesn't go for green/red, but a feedback for selected answer is missing
Opt for a greyer background for selected answer

Issue 4)
Notes areas below each question is missing, that's important and was to be mantained.

Issue 5)
the 'areas' for different excercises types in block B and C are unclear, some separation is required for clarity.
A significant amount of 'Rewrite the sentence according to the instructions.' is actually lacking the mentioned explanation.

Issue 6)
On submit block this happens: 
diagnostic-test-handler.js:220 Uncaught ReferenceError: Chart is not defined
    at DiagnosticTestHandler.renderOrUpdateChart (diagnostic-test-handler.js:220:1)
    at DiagnosticTestHandler.renderDiagnostics (diagnostic-test-handler.js:146:1)
    at DiagnosticTestHandler.render (diagnostic-test-handler.js:100:1)
    at DiagnosticTestHandler.checkAnswers (diagnostic-test-handler.js:462:1)
    at HTMLButtonElement.eval (diagnostic-test-handler.js:384:1)

Issue 7)
Once you click on diagnostics there is at the moment seemingly no way to go back to the tests aside from 'Azzera'
For this purpose, as continuation Issue 2) diagnostics should be a fourth 'block-tab'
# Project Hub v2: Tutoring & Writing App

---
## 1. Project Intent

The primary goal is to evolve the application from a simple content viewer into a robust, feature-rich Single Page Application (SPA). This refactoring focuses on enhancing user workflow, ensuring data persistence, and providing a seamless, offline-first desktop experience. The application is now architected around a multi-tab interface, centralized state management, and a comprehensive suite of tools for power users.

---
## 2. Implemented Features (v1.1.0 - 1.1.9)

This version introduces a significant architectural overhaul and a wide range of new features:

### Core Architecture & UI
- **Multi-Tab Interface:** Users can open multiple lessons, exercises, and tools in separate, independent tabs.
- **Centralized State Management:** All application and exercise states are managed centrally, ensuring data persists as long as a tab is open.
- **Content Toolbar:** A dedicated toolbar within each content view provides easy access to navigation, save/load actions, and other tools.
- **Full Offline Capability:** All core features are fully functional without an internet connection, with all necessary assets (like fonts) bundled locally.
- **Network Status Indicator:** A persistent UI element informs the user of the current online/offline status.
- **Automatic Update Notifications:** The app checks for updates on launch (when online) and notifies the user via a UI badge.

### Save & Data Management
- **Dedicated Save Library:** A full-screen interface for managing all save files across all lessons.
- **Advanced Import/Export:** Users can export multiple saves from different lessons into a single `.zip` archive and import them back into the application.
- **Virtual Folders:** Save files can be organized into custom, user-defined folders within the Save Library for better organization.
- **Auto-Save System:** Exercise progress is saved automatically in the background, preventing data loss.
- **Live Tab Synchronization:** Opening the same exercise in two different tabs will keep their states synchronized in real-time.
- **Per-Lesson Save Directories:** Save files are now automatically organized into subdirectories for each lesson, improving file system clarity.
- **In-App Save/Load Modals:** The old system file prompts have been replaced with custom, non-blocking UI dropdowns and modals.

### Quality of Life & User Experience
- **Home Screen Progress Tracking:** The main "Home" view now displays a visual indicator next to exercises that have saved progress.
- **Keyboard Shortcuts:** Standard shortcuts for common actions like creating/closing tabs (`Ctrl+T`/`Ctrl+W`), reloading (`Ctrl+R`), and saving (`Ctrl+S`) have been implemented.
- **Content Search/Filter:** A search bar on the "Home" view allows for real-time filtering of lessons and exercises.
- **File Management:** Users can rename save files directly from the UI.

---
## 3. Future Objectives

With this new foundation, future development will focus on:

- **Expanding Content Types:** Integrating new forms of interactive content and writing tools.
- **Rich Text & Highlighting:** Implementing a robust system for users to highlight text and add persistent annotations to lessons.
- **Advanced Search:** Building a global search that can query the content of lessons, not just file names.
- **User Customization:** Allowing more granular control over the application's appearance and behavior.
